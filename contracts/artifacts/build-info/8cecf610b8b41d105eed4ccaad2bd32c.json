{
	"id": "8cecf610b8b41d105eed4ccaad2bd32c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/pancakePriceChainLink.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract PriceConsumerV3 is Ownable {\r\n    mapping(address => AggregatorV3Interface) internal priceFeedMap;\r\n\r\n    function setPriceFeed(address token, address priceFeed) external onlyOwner {\r\n        priceFeedMap[token] = AggregatorV3Interface(priceFeed);\r\n    }\r\n\r\n    /**\r\n     * Returns the latest price\r\n     */\r\n    function getLatestPrice(address token) public view returns (int) {\r\n        (\r\n            uint80 roundID, \r\n            int price,\r\n            uint startedAt,\r\n            uint timeStamp,\r\n            uint80 answeredInRound\r\n        ) = priceFeedMap[token].latestRoundData();\r\n        return price;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 53,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/pancakePriceChainLink.sol": {
				"PriceConsumerV3": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/pancakePriceChainLink.sol\":194:840  contract PriceConsumerV3 is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/pancakePriceChainLink.sol\":194:840  contract PriceConsumerV3 is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/pancakePriceChainLink.sol\":194:840  contract PriceConsumerV3 is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/pancakePriceChainLink.sol\":194:840  contract PriceConsumerV3 is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16345f18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x76e11286\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/pancakePriceChainLink.sol\":516:823  function getLatestPrice(address token) public view returns (int) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/pancakePriceChainLink.sol\":309:457  function setPriceFeed(address token, address priceFeed) external onlyOwner {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/pancakePriceChainLink.sol\":516:823  function getLatestPrice(address token) public view returns (int) {... */\n    tag_11:\n        /* \"contracts/pancakePriceChainLink.sol\":576:579  int */\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":607:621  uint80 roundID */\n      dup1\n        /* \"contracts/pancakePriceChainLink.sol\":637:646  int price */\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":661:675  uint startedAt */\n      dup1\n        /* \"contracts/pancakePriceChainLink.sol\":690:704  uint timeStamp */\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":719:741  uint80 answeredInRound */\n      dup1\n        /* \"contracts/pancakePriceChainLink.sol\":755:767  priceFeedMap */\n      0x01\n        /* \"contracts/pancakePriceChainLink.sol\":755:774  priceFeedMap[token] */\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":768:773  token */\n      dup9\n        /* \"contracts/pancakePriceChainLink.sol\":755:774  priceFeedMap[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pancakePriceChainLink.sol\":755:790  priceFeedMap[token].latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/pancakePriceChainLink.sol\":755:792  priceFeedMap[token].latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/pancakePriceChainLink.sol\":592:792  (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/pancakePriceChainLink.sol\":810:815  price */\n      dup4\n        /* \"contracts/pancakePriceChainLink.sol\":803:815  return price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pancakePriceChainLink.sol\":516:823  function getLatestPrice(address token) public view returns (int) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/pancakePriceChainLink.sol\":309:457  function setPriceFeed(address token, address priceFeed) external onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"contracts/pancakePriceChainLink.sol\":439:448  priceFeed */\n      dup1\n        /* \"contracts/pancakePriceChainLink.sol\":395:407  priceFeedMap */\n      0x01\n        /* \"contracts/pancakePriceChainLink.sol\":395:414  priceFeedMap[token] */\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":408:413  token */\n      dup5\n        /* \"contracts/pancakePriceChainLink.sol\":395:414  priceFeedMap[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/pancakePriceChainLink.sol\":395:449  priceFeedMap[token] = AggregatorV3Interface(priceFeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pancakePriceChainLink.sol\":309:457  function setPriceFeed(address token, address priceFeed) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_62:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_64:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_65:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_90\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_64\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_66:\n        /* \"#utility.yul\":641:665   */\n      tag_92\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_65\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_93:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_67:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_95\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_66\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_98\n      tag_62\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":917:1036   */\n    tag_97:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_99\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_67\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1252   */\n    tag_68:\n        /* \"#utility.yul\":1212:1219   */\n      0x00\n        /* \"#utility.yul\":1241:1246   */\n      dup2\n        /* \"#utility.yul\":1230:1246   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1258:1373   */\n    tag_69:\n        /* \"#utility.yul\":1343:1366   */\n      tag_102\n        /* \"#utility.yul\":1360:1365   */\n      dup2\n        /* \"#utility.yul\":1343:1366   */\n      tag_68\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1338:1341   */\n      dup3\n        /* \"#utility.yul\":1331:1367   */\n      mstore\n        /* \"#utility.yul\":1258:1373   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1379:1597   */\n    tag_13:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1497:1506   */\n      dup3\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"#utility.yul\":1485:1511   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1590   */\n      tag_104\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1521:1590   */\n      tag_69\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1379:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:2077   */\n    tag_18:\n        /* \"#utility.yul\":1671:1677   */\n      0x00\n        /* \"#utility.yul\":1679:1685   */\n      dup1\n        /* \"#utility.yul\":1728:1730   */\n      0x40\n        /* \"#utility.yul\":1716:1725   */\n      dup4\n        /* \"#utility.yul\":1707:1714   */\n      dup6\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_107\n      tag_62\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1696:1815   */\n    tag_106:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_108\n        /* \"#utility.yul\":1924:1931   */\n      dup6\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup7\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_67\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1869:1932   */\n      swap3\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1981:1983   */\n      0x20\n        /* \"#utility.yul\":2007:2060   */\n      tag_109\n        /* \"#utility.yul\":2052:2059   */\n      dup6\n        /* \"#utility.yul\":2043:2049   */\n      dup3\n        /* \"#utility.yul\":2032:2041   */\n      dup7\n        /* \"#utility.yul\":2028:2050   */\n      add\n        /* \"#utility.yul\":2007:2060   */\n      tag_67\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1997:2060   */\n      swap2\n      pop\n        /* \"#utility.yul\":1952:2070   */\n      pop\n        /* \"#utility.yul\":1603:2077   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2201   */\n    tag_70:\n        /* \"#utility.yul\":2170:2194   */\n      tag_111\n        /* \"#utility.yul\":2188:2193   */\n      dup2\n        /* \"#utility.yul\":2170:2194   */\n      tag_65\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2165:2168   */\n      dup3\n        /* \"#utility.yul\":2158:2195   */\n      mstore\n        /* \"#utility.yul\":2083:2201   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2207:2429   */\n    tag_23:\n        /* \"#utility.yul\":2300:2304   */\n      0x00\n        /* \"#utility.yul\":2338:2340   */\n      0x20\n        /* \"#utility.yul\":2327:2336   */\n      dup3\n        /* \"#utility.yul\":2323:2341   */\n      add\n        /* \"#utility.yul\":2315:2341   */\n      swap1\n      pop\n        /* \"#utility.yul\":2351:2422   */\n      tag_113\n        /* \"#utility.yul\":2419:2420   */\n      0x00\n        /* \"#utility.yul\":2408:2417   */\n      dup4\n        /* \"#utility.yul\":2404:2421   */\n      add\n        /* \"#utility.yul\":2395:2401   */\n      dup5\n        /* \"#utility.yul\":2351:2422   */\n      tag_70\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2207:2429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2435:2540   */\n    tag_71:\n        /* \"#utility.yul\":2471:2478   */\n      0x00\n        /* \"#utility.yul\":2511:2533   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2500:2534   */\n      and\n        /* \"#utility.yul\":2489:2534   */\n      swap1\n      pop\n        /* \"#utility.yul\":2435:2540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2546:2666   */\n    tag_72:\n        /* \"#utility.yul\":2618:2641   */\n      tag_116\n        /* \"#utility.yul\":2635:2640   */\n      dup2\n        /* \"#utility.yul\":2618:2641   */\n      tag_71\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2611:2616   */\n      dup2\n        /* \"#utility.yul\":2608:2642   */\n      eq\n        /* \"#utility.yul\":2598:2660   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      dup1\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2598:2660   */\n    tag_117:\n        /* \"#utility.yul\":2546:2666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2672:2813   */\n    tag_73:\n        /* \"#utility.yul\":2728:2733   */\n      0x00\n        /* \"#utility.yul\":2759:2765   */\n      dup2\n        /* \"#utility.yul\":2753:2766   */\n      mload\n        /* \"#utility.yul\":2744:2766   */\n      swap1\n      pop\n        /* \"#utility.yul\":2775:2807   */\n      tag_119\n        /* \"#utility.yul\":2801:2806   */\n      dup2\n        /* \"#utility.yul\":2775:2807   */\n      tag_72\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2672:2813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2819:2939   */\n    tag_74:\n        /* \"#utility.yul\":2891:2914   */\n      tag_121\n        /* \"#utility.yul\":2908:2913   */\n      dup2\n        /* \"#utility.yul\":2891:2914   */\n      tag_68\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2884:2889   */\n      dup2\n        /* \"#utility.yul\":2881:2915   */\n      eq\n        /* \"#utility.yul\":2871:2933   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":2929:2930   */\n      0x00\n        /* \"#utility.yul\":2926:2927   */\n      dup1\n        /* \"#utility.yul\":2919:2931   */\n      revert\n        /* \"#utility.yul\":2871:2933   */\n    tag_122:\n        /* \"#utility.yul\":2819:2939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2945:3086   */\n    tag_75:\n        /* \"#utility.yul\":3001:3006   */\n      0x00\n        /* \"#utility.yul\":3032:3038   */\n      dup2\n        /* \"#utility.yul\":3026:3039   */\n      mload\n        /* \"#utility.yul\":3017:3039   */\n      swap1\n      pop\n        /* \"#utility.yul\":3048:3080   */\n      tag_124\n        /* \"#utility.yul\":3074:3079   */\n      dup2\n        /* \"#utility.yul\":3048:3080   */\n      tag_74\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2945:3086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3092:3169   */\n    tag_76:\n        /* \"#utility.yul\":3129:3136   */\n      0x00\n        /* \"#utility.yul\":3158:3163   */\n      dup2\n        /* \"#utility.yul\":3147:3163   */\n      swap1\n      pop\n        /* \"#utility.yul\":3092:3169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3297   */\n    tag_77:\n        /* \"#utility.yul\":3248:3272   */\n      tag_127\n        /* \"#utility.yul\":3266:3271   */\n      dup2\n        /* \"#utility.yul\":3248:3272   */\n      tag_76\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3241:3246   */\n      dup2\n        /* \"#utility.yul\":3238:3273   */\n      eq\n        /* \"#utility.yul\":3228:3291   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3228:3291   */\n    tag_128:\n        /* \"#utility.yul\":3175:3297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3446   */\n    tag_78:\n        /* \"#utility.yul\":3360:3365   */\n      0x00\n        /* \"#utility.yul\":3391:3397   */\n      dup2\n        /* \"#utility.yul\":3385:3398   */\n      mload\n        /* \"#utility.yul\":3376:3398   */\n      swap1\n      pop\n        /* \"#utility.yul\":3407:3440   */\n      tag_130\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3407:3440   */\n      tag_77\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3303:3446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:4423   */\n    tag_31:\n        /* \"#utility.yul\":3555:3561   */\n      0x00\n        /* \"#utility.yul\":3563:3569   */\n      dup1\n        /* \"#utility.yul\":3571:3577   */\n      0x00\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3587:3593   */\n      0x00\n        /* \"#utility.yul\":3636:3639   */\n      0xa0\n        /* \"#utility.yul\":3624:3633   */\n      dup7\n        /* \"#utility.yul\":3615:3622   */\n      dup9\n        /* \"#utility.yul\":3611:3634   */\n      sub\n        /* \"#utility.yul\":3607:3640   */\n      slt\n        /* \"#utility.yul\":3604:3724   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3643:3722   */\n      tag_133\n      tag_62\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3604:3724   */\n    tag_132:\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3788:3851   */\n      tag_134\n        /* \"#utility.yul\":3843:3850   */\n      dup9\n        /* \"#utility.yul\":3834:3840   */\n      dup3\n        /* \"#utility.yul\":3823:3832   */\n      dup10\n        /* \"#utility.yul\":3819:3841   */\n      add\n        /* \"#utility.yul\":3788:3851   */\n      tag_73\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3778:3851   */\n      swap6\n      pop\n        /* \"#utility.yul\":3734:3861   */\n      pop\n        /* \"#utility.yul\":3900:3902   */\n      0x20\n        /* \"#utility.yul\":3926:3989   */\n      tag_135\n        /* \"#utility.yul\":3981:3988   */\n      dup9\n        /* \"#utility.yul\":3972:3978   */\n      dup3\n        /* \"#utility.yul\":3961:3970   */\n      dup10\n        /* \"#utility.yul\":3957:3979   */\n      add\n        /* \"#utility.yul\":3926:3989   */\n      tag_75\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3916:3989   */\n      swap5\n      pop\n        /* \"#utility.yul\":3871:3999   */\n      pop\n        /* \"#utility.yul\":4038:4040   */\n      0x40\n        /* \"#utility.yul\":4064:4128   */\n      tag_136\n        /* \"#utility.yul\":4120:4127   */\n      dup9\n        /* \"#utility.yul\":4111:4117   */\n      dup3\n        /* \"#utility.yul\":4100:4109   */\n      dup10\n        /* \"#utility.yul\":4096:4118   */\n      add\n        /* \"#utility.yul\":4064:4128   */\n      tag_78\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4054:4128   */\n      swap4\n      pop\n        /* \"#utility.yul\":4009:4138   */\n      pop\n        /* \"#utility.yul\":4177:4179   */\n      0x60\n        /* \"#utility.yul\":4203:4267   */\n      tag_137\n        /* \"#utility.yul\":4259:4266   */\n      dup9\n        /* \"#utility.yul\":4250:4256   */\n      dup3\n        /* \"#utility.yul\":4239:4248   */\n      dup10\n        /* \"#utility.yul\":4235:4257   */\n      add\n        /* \"#utility.yul\":4203:4267   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4193:4267   */\n      swap3\n      pop\n        /* \"#utility.yul\":4148:4277   */\n      pop\n        /* \"#utility.yul\":4316:4319   */\n      0x80\n        /* \"#utility.yul\":4343:4406   */\n      tag_138\n        /* \"#utility.yul\":4398:4405   */\n      dup9\n        /* \"#utility.yul\":4389:4395   */\n      dup3\n        /* \"#utility.yul\":4378:4387   */\n      dup10\n        /* \"#utility.yul\":4374:4396   */\n      add\n        /* \"#utility.yul\":4343:4406   */\n      tag_73\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4333:4406   */\n      swap2\n      pop\n        /* \"#utility.yul\":4287:4416   */\n      pop\n        /* \"#utility.yul\":3452:4423   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4598   */\n    tag_79:\n        /* \"#utility.yul\":4513:4524   */\n      0x00\n        /* \"#utility.yul\":4547:4553   */\n      dup3\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4535:4554   */\n      mstore\n        /* \"#utility.yul\":4587:4591   */\n      0x20\n        /* \"#utility.yul\":4582:4585   */\n      dup3\n        /* \"#utility.yul\":4578:4592   */\n      add\n        /* \"#utility.yul\":4563:4592   */\n      swap1\n      pop\n        /* \"#utility.yul\":4429:4598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4604:4786   */\n    tag_80:\n        /* \"#utility.yul\":4744:4778   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4740:4741   */\n      0x00\n        /* \"#utility.yul\":4732:4738   */\n      dup3\n        /* \"#utility.yul\":4728:4742   */\n      add\n        /* \"#utility.yul\":4721:4779   */\n      mstore\n        /* \"#utility.yul\":4604:4786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4792:5158   */\n    tag_81:\n        /* \"#utility.yul\":4934:4937   */\n      0x00\n        /* \"#utility.yul\":4955:5022   */\n      tag_142\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"#utility.yul\":5014:5017   */\n      dup4\n        /* \"#utility.yul\":4955:5022   */\n      tag_79\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4948:5022   */\n      swap2\n      pop\n        /* \"#utility.yul\":5031:5124   */\n      tag_143\n        /* \"#utility.yul\":5120:5123   */\n      dup3\n        /* \"#utility.yul\":5031:5124   */\n      tag_80\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5149:5151   */\n      0x20\n        /* \"#utility.yul\":5144:5147   */\n      dup3\n        /* \"#utility.yul\":5140:5152   */\n      add\n        /* \"#utility.yul\":5133:5152   */\n      swap1\n      pop\n        /* \"#utility.yul\":4792:5158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5164:5583   */\n    tag_38:\n        /* \"#utility.yul\":5330:5334   */\n      0x00\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5357:5366   */\n      dup3\n        /* \"#utility.yul\":5353:5371   */\n      add\n        /* \"#utility.yul\":5345:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5417:5426   */\n      dup2\n        /* \"#utility.yul\":5411:5415   */\n      dup2\n        /* \"#utility.yul\":5407:5427   */\n      sub\n        /* \"#utility.yul\":5403:5404   */\n      0x00\n        /* \"#utility.yul\":5392:5401   */\n      dup4\n        /* \"#utility.yul\":5388:5405   */\n      add\n        /* \"#utility.yul\":5381:5428   */\n      mstore\n        /* \"#utility.yul\":5445:5576   */\n      tag_145\n        /* \"#utility.yul\":5571:5575   */\n      dup2\n        /* \"#utility.yul\":5445:5576   */\n      tag_81\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5437:5576   */\n      swap1\n      pop\n        /* \"#utility.yul\":5164:5583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5589:5814   */\n    tag_82:\n        /* \"#utility.yul\":5729:5763   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5725:5726   */\n      0x00\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5713:5727   */\n      add\n        /* \"#utility.yul\":5706:5764   */\n      mstore\n        /* \"#utility.yul\":5798:5806   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5793:5795   */\n      0x20\n        /* \"#utility.yul\":5785:5791   */\n      dup3\n        /* \"#utility.yul\":5781:5796   */\n      add\n        /* \"#utility.yul\":5774:5807   */\n      mstore\n        /* \"#utility.yul\":5589:5814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:6186   */\n    tag_83:\n        /* \"#utility.yul\":5962:5965   */\n      0x00\n        /* \"#utility.yul\":5983:6050   */\n      tag_148\n        /* \"#utility.yul\":6047:6049   */\n      0x26\n        /* \"#utility.yul\":6042:6045   */\n      dup4\n        /* \"#utility.yul\":5983:6050   */\n      tag_79\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5976:6050   */\n      swap2\n      pop\n        /* \"#utility.yul\":6059:6152   */\n      tag_149\n        /* \"#utility.yul\":6148:6151   */\n      dup3\n        /* \"#utility.yul\":6059:6152   */\n      tag_82\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6177:6179   */\n      0x40\n        /* \"#utility.yul\":6172:6175   */\n      dup3\n        /* \"#utility.yul\":6168:6180   */\n      add\n        /* \"#utility.yul\":6161:6180   */\n      swap1\n      pop\n        /* \"#utility.yul\":5820:6186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6192:6611   */\n    tag_57:\n        /* \"#utility.yul\":6358:6362   */\n      0x00\n        /* \"#utility.yul\":6396:6398   */\n      0x20\n        /* \"#utility.yul\":6385:6394   */\n      dup3\n        /* \"#utility.yul\":6381:6399   */\n      add\n        /* \"#utility.yul\":6373:6399   */\n      swap1\n      pop\n        /* \"#utility.yul\":6445:6454   */\n      dup2\n        /* \"#utility.yul\":6439:6443   */\n      dup2\n        /* \"#utility.yul\":6435:6455   */\n      sub\n        /* \"#utility.yul\":6431:6432   */\n      0x00\n        /* \"#utility.yul\":6420:6429   */\n      dup4\n        /* \"#utility.yul\":6416:6433   */\n      add\n        /* \"#utility.yul\":6409:6456   */\n      mstore\n        /* \"#utility.yul\":6473:6604   */\n      tag_151\n        /* \"#utility.yul\":6599:6603   */\n      dup2\n        /* \"#utility.yul\":6473:6604   */\n      tag_83\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6465:6604   */\n      swap1\n      pop\n        /* \"#utility.yul\":6192:6611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c93994405d65ad3ab38eccb1e660bff74128e4f2058e6e922b390c3e7888716864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_162": {
									"entryPoint": 50,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 58,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108de8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806316345f181461005c578063715018a61461008c57806376e11286146100965780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906105af565b6100ec565b60405161008391906105f5565b60405180910390f35b6100946101da565b005b6100b060048036038101906100ab9190610610565b610262565b005b6100ba610360565b6040516100c7919061065f565b60405180910390f35b6100ea60048036038101906100e591906105af565b610389565b005b600080600080600080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c3919061071e565b945094509450945094508395505050505050919050565b6101e2610480565b73ffffffffffffffffffffffffffffffffffffffff16610200610360565b73ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d906107f6565b60405180910390fd5b6102606000610488565b565b61026a610480565b73ffffffffffffffffffffffffffffffffffffffff16610288610360565b73ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d5906107f6565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610391610480565b73ffffffffffffffffffffffffffffffffffffffff166103af610360565b73ffffffffffffffffffffffffffffffffffffffff1614610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc906107f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b90610888565b60405180910390fd5b61047d81610488565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057c82610551565b9050919050565b61058c81610571565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000602082840312156105c5576105c461054c565b5b60006105d38482850161059a565b91505092915050565b6000819050919050565b6105ef816105dc565b82525050565b600060208201905061060a60008301846105e6565b92915050565b600080604083850312156106275761062661054c565b5b60006106358582860161059a565b92505060206106468582860161059a565b9150509250929050565b61065981610571565b82525050565b60006020820190506106746000830184610650565b92915050565b600069ffffffffffffffffffff82169050919050565b6106998161067a565b81146106a457600080fd5b50565b6000815190506106b681610690565b92915050565b6106c5816105dc565b81146106d057600080fd5b50565b6000815190506106e2816106bc565b92915050565b6000819050919050565b6106fb816106e8565b811461070657600080fd5b50565b600081519050610718816106f2565b92915050565b600080600080600060a0868803121561073a5761073961054c565b5b6000610748888289016106a7565b9550506020610759888289016106d3565b945050604061076a88828901610709565b935050606061077b88828901610709565b925050608061078c888289016106a7565b9150509295509295909350565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107e0602083610799565b91506107eb826107aa565b602082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610872602683610799565b915061087d82610816565b604082019050919050565b600060208201905081810360008301526108a181610865565b905091905056fea2646970667358221220c93994405d65ad3ab38eccb1e660bff74128e4f2058e6e922b390c3e7888716864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8DE DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16345F18 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200 PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x260 PUSH1 0x0 PUSH2 0x488 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x26A PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288 PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x488 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C DUP3 PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C DUP2 PUSH2 0x571 JUMP JUMPDEST DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A9 DUP2 PUSH2 0x583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C5 JUMPI PUSH2 0x5C4 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D3 DUP5 DUP3 DUP6 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH2 0x626 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x635 DUP6 DUP3 DUP7 ADD PUSH2 0x59A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x646 DUP6 DUP3 DUP7 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x571 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B6 DUP2 PUSH2 0x690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x5DC JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH2 0x739 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x748 DUP9 DUP3 DUP10 ADD PUSH2 0x6A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x759 DUP9 DUP3 DUP10 ADD PUSH2 0x6D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x76A DUP9 DUP3 DUP10 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x77B DUP9 DUP3 DUP10 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x78C DUP9 DUP3 DUP10 ADD PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E0 PUSH1 0x20 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EB DUP3 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80F DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x872 PUSH1 0x26 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH2 0x87D DUP3 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8A1 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CODECOPY SWAP5 BLOCKHASH 0x5D PUSH6 0xAD3AB38ECCB1 0xE6 PUSH1 0xBF 0xF7 COINBASE 0x28 0xE4 CALLCODE SDIV DUP15 PUSH15 0x922B390C3E7888716864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:646:3:-:0;;;;;;;;;;;;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;194:646:3;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;194:646:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_162": {
									"entryPoint": 1152,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 1160,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLatestPrice_228": {
									"entryPoint": 236,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": 864,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_106": {
									"entryPoint": 474,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPriceFeed_201": {
									"entryPoint": 610,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_129": {
									"entryPoint": 905,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6614:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1241:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1230:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1212:7:4",
														"type": ""
													}
												],
												"src": "1176:76:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1360:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1343:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1343:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:36:4"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1309:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1316:3:4",
														"type": ""
													}
												],
												"src": "1258:115:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:122:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1521:41:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:69:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1521:69:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1447:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1459:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1470:4:4",
														"type": ""
													}
												],
												"src": "1379:218:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1686:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1732:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:32:4"
															},
															"nodeType": "YulIf",
															"src": "1696:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1825:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1869:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1952:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1967:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1981:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1971:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1997:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2032:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2043:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2028:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2028:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2052:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2007:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1997:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1648:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1659:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1671:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1679:6:4",
														"type": ""
													}
												],
												"src": "1603:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2148:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2165:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2188:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2170:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2136:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2143:3:4",
														"type": ""
													}
												],
												"src": "2083:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2305:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2315:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2315:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2408:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2419:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2351:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2351:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2277:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2289:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2300:4:4",
														"type": ""
													}
												],
												"src": "2207:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2479:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2489:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2504:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2511:22:4",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2500:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:34:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2489:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2461:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2471:7:4",
														"type": ""
													}
												],
												"src": "2435:105:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2588:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2644:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2646:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2611:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2635:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "2618:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2618:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2608:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:42:4"
															},
															"nodeType": "YulIf",
															"src": "2598:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2581:5:4",
														"type": ""
													}
												],
												"src": "2546:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2744:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2759:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2753:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2744:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2801:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "2775:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2775:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2712:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2720:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2728:5:4",
														"type": ""
													}
												],
												"src": "2672:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2861:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2917:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2929:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2919:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2884:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2908:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "2891:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2881:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2881:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2874:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:42:4"
															},
															"nodeType": "YulIf",
															"src": "2871:62:4"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2854:5:4",
														"type": ""
													}
												],
												"src": "2819:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3017:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3032:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3017:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3074:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "3048:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:32:4"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2985:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2993:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3001:5:4",
														"type": ""
													}
												],
												"src": "2945:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3147:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3158:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3147:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3119:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3129:7:4",
														"type": ""
													}
												],
												"src": "3092:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3218:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3275:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3241:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3266:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3248:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3248:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3238:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:43:4"
															},
															"nodeType": "YulIf",
															"src": "3228:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3211:5:4",
														"type": ""
													}
												],
												"src": "3175:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3366:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3376:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3391:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3385:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3376:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3434:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3407:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3407:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3344:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3352:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3360:5:4",
														"type": ""
													}
												],
												"src": "3303:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3594:829:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3641:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3643:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3643:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3643:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3615:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3624:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3607:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:33:4"
															},
															"nodeType": "YulIf",
															"src": "3604:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3734:127:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3749:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3763:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3753:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3778:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3823:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3834:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3819:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3819:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3843:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3788:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3778:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3871:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3886:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3890:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3916:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3961:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3972:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3957:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3957:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3981:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3926:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3916:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4009:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4024:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4038:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4028:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4054:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4100:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4111:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4096:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4096:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4120:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4064:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4064:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4054:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4148:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4163:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4167:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4193:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4239:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4250:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4235:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4259:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4203:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4193:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4287:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4302:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4316:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4306:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4333:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4378:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4389:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4374:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4374:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4398:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4343:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4333:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3532:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3543:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3555:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3563:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3571:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3579:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3587:6:4",
														"type": ""
													}
												],
												"src": "3452:971:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4525:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4535:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4563:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4582:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4563:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4497:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4502:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4513:11:4",
														"type": ""
													}
												],
												"src": "4429:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4710:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4732:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4740:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4744:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4702:6:4",
														"type": ""
													}
												],
												"src": "4604:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4938:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4948:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5014:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4955:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4948:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5120:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5031:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5031:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5031:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5133:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5144:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4926:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4934:3:4",
														"type": ""
													}
												],
												"src": "4792:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5392:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5403:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5388:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5388:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5411:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5437:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5571:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5445:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5437:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5315:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5330:4:4",
														"type": ""
													}
												],
												"src": "5164:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5695:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5729:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5785:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5793:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5781:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5781:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5798:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5774:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5687:6:4",
														"type": ""
													}
												],
												"src": "5589:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5966:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5976:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6042:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5983:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5976:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6148:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "6059:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6059:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6161:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6172:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6177:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6161:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5954:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5962:3:4",
														"type": ""
													}
												],
												"src": "5820:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6373:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6385:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6381:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6373:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6420:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6431:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6416:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6416:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6439:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6435:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6409:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6465:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6599:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6473:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6465:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6343:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6358:4:4",
														"type": ""
													}
												],
												"src": "6192:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806316345f181461005c578063715018a61461008c57806376e11286146100965780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906105af565b6100ec565b60405161008391906105f5565b60405180910390f35b6100946101da565b005b6100b060048036038101906100ab9190610610565b610262565b005b6100ba610360565b6040516100c7919061065f565b60405180910390f35b6100ea60048036038101906100e591906105af565b610389565b005b600080600080600080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c3919061071e565b945094509450945094508395505050505050919050565b6101e2610480565b73ffffffffffffffffffffffffffffffffffffffff16610200610360565b73ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d906107f6565b60405180910390fd5b6102606000610488565b565b61026a610480565b73ffffffffffffffffffffffffffffffffffffffff16610288610360565b73ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d5906107f6565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610391610480565b73ffffffffffffffffffffffffffffffffffffffff166103af610360565b73ffffffffffffffffffffffffffffffffffffffff1614610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc906107f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b90610888565b60405180910390fd5b61047d81610488565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057c82610551565b9050919050565b61058c81610571565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000602082840312156105c5576105c461054c565b5b60006105d38482850161059a565b91505092915050565b6000819050919050565b6105ef816105dc565b82525050565b600060208201905061060a60008301846105e6565b92915050565b600080604083850312156106275761062661054c565b5b60006106358582860161059a565b92505060206106468582860161059a565b9150509250929050565b61065981610571565b82525050565b60006020820190506106746000830184610650565b92915050565b600069ffffffffffffffffffff82169050919050565b6106998161067a565b81146106a457600080fd5b50565b6000815190506106b681610690565b92915050565b6106c5816105dc565b81146106d057600080fd5b50565b6000815190506106e2816106bc565b92915050565b6000819050919050565b6106fb816106e8565b811461070657600080fd5b50565b600081519050610718816106f2565b92915050565b600080600080600060a0868803121561073a5761073961054c565b5b6000610748888289016106a7565b9550506020610759888289016106d3565b945050604061076a88828901610709565b935050606061077b88828901610709565b925050608061078c888289016106a7565b9150509295509295909350565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107e0602083610799565b91506107eb826107aa565b602082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610872602683610799565b915061087d82610816565b604082019050919050565b600060208201905081810360008301526108a181610865565b905091905056fea2646970667358221220c93994405d65ad3ab38eccb1e660bff74128e4f2058e6e922b390c3e7888716864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16345F18 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200 PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x260 PUSH1 0x0 PUSH2 0x488 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x26A PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288 PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF PUSH2 0x360 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x488 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C DUP3 PUSH2 0x551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C DUP2 PUSH2 0x571 JUMP JUMPDEST DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A9 DUP2 PUSH2 0x583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C5 JUMPI PUSH2 0x5C4 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D3 DUP5 DUP3 DUP6 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH2 0x626 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x635 DUP6 DUP3 DUP7 ADD PUSH2 0x59A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x646 DUP6 DUP3 DUP7 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x571 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B6 DUP2 PUSH2 0x690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x5DC JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH2 0x739 PUSH2 0x54C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x748 DUP9 DUP3 DUP10 ADD PUSH2 0x6A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x759 DUP9 DUP3 DUP10 ADD PUSH2 0x6D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x76A DUP9 DUP3 DUP10 ADD PUSH2 0x709 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x77B DUP9 DUP3 DUP10 ADD PUSH2 0x709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x78C DUP9 DUP3 DUP10 ADD PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E0 PUSH1 0x20 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EB DUP3 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80F DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x872 PUSH1 0x26 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH2 0x87D DUP3 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8A1 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CODECOPY SWAP5 BLOCKHASH 0x5D PUSH6 0xAD3AB38ECCB1 0xE6 PUSH1 0xBF 0xF7 COINBASE 0x28 0xE4 CALLCODE SDIV DUP15 PUSH15 0x922B390C3E7888716864736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:646:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;:::i;:::-;;309:148:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;516:307:3;576:3;607:14;637:9;661:14;690;719:22;755:12;:19;768:5;755:19;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;592:200;;;;;;;;;;810:5;803:12;;;;;;;516:307;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;309:148:3:-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;439:9:3::1;395:12;:19;408:5;395:19;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;309:148:::0;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1918:198::-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:76::-;1212:7;1241:5;1230:16;;1176:76;;;:::o;1258:115::-;1343:23;1360:5;1343:23;:::i;:::-;1338:3;1331:36;1258:115;;:::o;1379:218::-;1470:4;1508:2;1497:9;1493:18;1485:26;;1521:69;1587:1;1576:9;1572:17;1563:6;1521:69;:::i;:::-;1379:218;;;;:::o;1603:474::-;1671:6;1679;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1981:2;2007:53;2052:7;2043:6;2032:9;2028:22;2007:53;:::i;:::-;1997:63;;1952:118;1603:474;;;;;:::o;2083:118::-;2170:24;2188:5;2170:24;:::i;:::-;2165:3;2158:37;2083:118;;:::o;2207:222::-;2300:4;2338:2;2327:9;2323:18;2315:26;;2351:71;2419:1;2408:9;2404:17;2395:6;2351:71;:::i;:::-;2207:222;;;;:::o;2435:105::-;2471:7;2511:22;2504:5;2500:34;2489:45;;2435:105;;;:::o;2546:120::-;2618:23;2635:5;2618:23;:::i;:::-;2611:5;2608:34;2598:62;;2656:1;2653;2646:12;2598:62;2546:120;:::o;2672:141::-;2728:5;2759:6;2753:13;2744:22;;2775:32;2801:5;2775:32;:::i;:::-;2672:141;;;;:::o;2819:120::-;2891:23;2908:5;2891:23;:::i;:::-;2884:5;2881:34;2871:62;;2929:1;2926;2919:12;2871:62;2819:120;:::o;2945:141::-;3001:5;3032:6;3026:13;3017:22;;3048:32;3074:5;3048:32;:::i;:::-;2945:141;;;;:::o;3092:77::-;3129:7;3158:5;3147:16;;3092:77;;;:::o;3175:122::-;3248:24;3266:5;3248:24;:::i;:::-;3241:5;3238:35;3228:63;;3287:1;3284;3277:12;3228:63;3175:122;:::o;3303:143::-;3360:5;3391:6;3385:13;3376:22;;3407:33;3434:5;3407:33;:::i;:::-;3303:143;;;;:::o;3452:971::-;3555:6;3563;3571;3579;3587;3636:3;3624:9;3615:7;3611:23;3607:33;3604:120;;;3643:79;;:::i;:::-;3604:120;3763:1;3788:63;3843:7;3834:6;3823:9;3819:22;3788:63;:::i;:::-;3778:73;;3734:127;3900:2;3926:63;3981:7;3972:6;3961:9;3957:22;3926:63;:::i;:::-;3916:73;;3871:128;4038:2;4064:64;4120:7;4111:6;4100:9;4096:22;4064:64;:::i;:::-;4054:74;;4009:129;4177:2;4203:64;4259:7;4250:6;4239:9;4235:22;4203:64;:::i;:::-;4193:74;;4148:129;4316:3;4343:63;4398:7;4389:6;4378:9;4374:22;4343:63;:::i;:::-;4333:73;;4287:129;3452:971;;;;;;;;:::o;4429:169::-;4513:11;4547:6;4542:3;4535:19;4587:4;4582:3;4578:14;4563:29;;4429:169;;;;:::o;4604:182::-;4744:34;4740:1;4732:6;4728:14;4721:58;4604:182;:::o;4792:366::-;4934:3;4955:67;5019:2;5014:3;4955:67;:::i;:::-;4948:74;;5031:93;5120:3;5031:93;:::i;:::-;5149:2;5144:3;5140:12;5133:19;;4792:366;;;:::o;5164:419::-;5330:4;5368:2;5357:9;5353:18;5345:26;;5417:9;5411:4;5407:20;5403:1;5392:9;5388:17;5381:47;5445:131;5571:4;5445:131;:::i;:::-;5437:139;;5164:419;;;:::o;5589:225::-;5729:34;5725:1;5717:6;5713:14;5706:58;5798:8;5793:2;5785:6;5781:15;5774:33;5589:225;:::o;5820:366::-;5962:3;5983:67;6047:2;6042:3;5983:67;:::i;:::-;5976:74;;6059:93;6148:3;6059:93;:::i;:::-;6177:2;6172:3;6168:12;6161:19;;5820:366;;;:::o;6192:419::-;6358:4;6396:2;6385:9;6381:18;6373:26;;6445:9;6439:4;6435:20;6431:1;6420:9;6416:17;6409:47;6473:131;6599:4;6473:131;:::i;:::-;6465:139;;6192:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "454000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getLatestPrice(address)": "infinite",
								"owner()": "2566",
								"renounceOwnership()": "30374",
								"setPriceFeed(address,address)": "infinite",
								"transferOwnership(address)": "30786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 840,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 840,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c93994405d65ad3ab38eccb1e660bff74128e4f2058e6e922b390c3e7888716864736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "16345F18"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "76E11286"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 516,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 516,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 516,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 309,
											"end": 457,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 823,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 516,
											"end": 823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 576,
											"end": 579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 690,
											"end": 704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 755,
											"end": 774,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 790,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "FEAF968C"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 755,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 810,
											"end": 815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 516,
											"end": 823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 309,
											"end": 457,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 448,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 413,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 395,
											"end": 414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 395,
											"end": 449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1998,
											"end": 2071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1373,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1258,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1343,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1521,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1521,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 1983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2007,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 2077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2083,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2188,
											"end": 2193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2170,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2195,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2351,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2351,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2435,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2534,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2546,
											"end": 2666,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2546,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2618,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2641,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2618,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2642,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2598,
											"end": 2660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2660,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2598,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2546,
											"end": 2666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2546,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2801,
											"end": 2806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2775,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2775,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2908,
											"end": 2913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2891,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2915,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2871,
											"end": 2933,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2933,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2871,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3048,
											"end": 3080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3248,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3273,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3398,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3407,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3624,
											"end": 3633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3640,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3724,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3604,
											"end": 3724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3643,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3604,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3843,
											"end": 3850,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3788,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3788,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3981,
											"end": 3988,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3926,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3989,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3926,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3989,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3871,
											"end": 3999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4120,
											"end": 4127,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4109,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4096,
											"end": 4118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4064,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4128,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4064,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4128,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4179,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4203,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4203,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4267,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4203,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4267,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4319,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4343,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4398,
											"end": 4405,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4387,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4343,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4406,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4343,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4786,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4604,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 5158,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4792,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4955,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 5022,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4955,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5031,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5124,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5031,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 5158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 5158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 5158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 5158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5583,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5164,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5381,
											"end": 5428,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5571,
											"end": 5575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5445,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5576,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5445,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5814,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5589,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5706,
											"end": 5764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5798,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 6186,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5820,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5962,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6047,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6042,
											"end": 6045,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5983,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6050,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5983,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6059,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6148,
											"end": 6151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6059,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6059,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6059,
											"end": 6152,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6059,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6168,
											"end": 6180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 6186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 6186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 6186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 6186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6611,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6192,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6398,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6381,
											"end": 6399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6435,
											"end": 6455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6416,
											"end": 6433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6409,
											"end": 6456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6473,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6473,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6473,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/pancakePriceChainLink.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getLatestPrice(address)": "16345f18",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setPriceFeed(address,address)": "76e11286",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPrice(address)\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pancakePriceChainLink.sol\":\"PriceConsumerV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"contracts/pancakePriceChainLink.sol\":{\"keccak256\":\"0xf1fbf3800ca1696630db97ddf16e38214df0c6b0e64bcca0101c054f46a0b8ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39cd04f6a6e0e0e1fc91f39769c2bcd6a18d5112a2ed565659377623add7241d\",\"dweb:/ipfs/QmTgRMbAq3CVXtTw9nVFCzRwfGgBB5xf3dEcnL85hLsjRe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 53,
								"contract": "contracts/pancakePriceChainLink.sol:PriceConsumerV3",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 183,
								"contract": "contracts/pancakePriceChainLink.sol:PriceConsumerV3",
								"label": "priceFeedMap",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)45"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getLatestPrice(address)": {
								"notice": "Returns the latest price"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/pancakePriceChainLink.sol:19:13:\n   |\n19 |             uint80 roundID, \n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 621,
					"file": "contracts/pancakePriceChainLink.sol",
					"start": 607
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/pancakePriceChainLink.sol:21:13:\n   |\n21 |             uint startedAt,\n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 675,
					"file": "contracts/pancakePriceChainLink.sol",
					"start": 661
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/pancakePriceChainLink.sol:22:13:\n   |\n22 |             uint timeStamp,\n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 704,
					"file": "contracts/pancakePriceChainLink.sol",
					"start": 690
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/pancakePriceChainLink.sol:23:13:\n   |\n23 |             uint80 answeredInRound\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 741,
					"file": "contracts/pancakePriceChainLink.sol",
					"start": 719
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "296:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "377:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "399:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "391:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "424:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "416:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "448:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "441:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:129:0"
									},
									"scope": 45,
									"src": "267:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "483:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "594:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "586:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "619:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "643:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:129:0"
									},
									"scope": 45,
									"src": "474:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:610:0",
							"usedErrors": []
						}
					],
					"src": "32:636:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							172
						],
						"Ownable": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 173,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 50,
										"name": "Context",
										"nameLocations": [
											"668:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "668:7:1"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 49,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								172
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 59,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 64,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 63,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 150,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 150,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 82,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 84,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 90,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 92,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 96,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 95,
												"name": "onlyOwner",
												"nameLocations": [
													"1712:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 150,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 115,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 111,
												"name": "onlyOwner",
												"nameLocations": [
													"1978:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 150,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 135,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"id": 137,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 150,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 153,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 158,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 157,
												"id": 160,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 172,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 167,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 166,
												"id": 169,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 172,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 173,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/pancakePriceChainLink.sol": {
				"ast": {
					"absolutePath": "contracts/pancakePriceChainLink.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							172
						],
						"Ownable": [
							150
						],
						"PriceConsumerV3": [
							229
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 46,
							"src": "60:76:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 151,
							"src": "138:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "Ownable",
										"nameLocations": [
											"222:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "222:7:3"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "222:7:3"
								}
							],
							"canonicalName": "PriceConsumerV3",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								150,
								172
							],
							"name": "PriceConsumerV3",
							"nameLocation": "203:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "priceFeedMap",
									"nameLocation": "288:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "237:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 182,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "245:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "237:41:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 180,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"256:21:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "256:21:3"
											},
											"referencedDeclaration": 45,
											"src": "256:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "384:73:3",
										"statements": [
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 192,
															"name": "priceFeedMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "395:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "mapping(address => contract AggregatorV3Interface)"
															}
														},
														"id": 194,
														"indexExpression": {
															"id": 193,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "408:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "395:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 196,
																"name": "priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "439:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 195,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "417:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "417:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "395:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "395:54:3"
											}
										]
									},
									"functionSelector": "76e11286",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 189,
												"name": "onlyOwner",
												"nameLocations": [
													"374:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "374:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "374:9:3"
										}
									],
									"name": "setPriceFeed",
									"nameLocation": "318:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "339:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "331:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "354:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "346:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:34:3"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:3"
									},
									"scope": 229,
									"src": "309:148:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "581:242:3",
										"statements": [
											{
												"assignments": [
													210,
													212,
													214,
													216,
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "614:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "607:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 209,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "607:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "641:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "637:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 211,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "637:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "startedAt",
														"nameLocation": "666:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "661:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "661:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 216,
														"mutability": "mutable",
														"name": "timeStamp",
														"nameLocation": "695:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "690:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "690:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "726:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "719:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 217,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 219,
																"name": "priceFeedMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "755:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
																	"typeString": "mapping(address => contract AggregatorV3Interface)"
																}
															},
															"id": 221,
															"indexExpression": {
																"id": 220,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "768:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "755:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "775:15:3",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "755:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "755:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "592:200:3"
											},
											{
												"expression": {
													"id": 225,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 212,
													"src": "810:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "803:12:3"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "465:45:3",
										"text": " Returns the latest price"
									},
									"functionSelector": "16345f18",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "525:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "548:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "576:3:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 206,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "576:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:5:3"
									},
									"scope": 229,
									"src": "516:307:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 230,
							"src": "194:646:3",
							"usedErrors": []
						}
					],
					"src": "33:807:3"
				},
				"id": 3
			}
		}
	}
}